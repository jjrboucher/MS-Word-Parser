tip_sameRsidRoot = {
    "Title": "Find all documents from the same root document (RSID Root)",
    "Text": "- Identify the document of interest and note the RSID Root value.\n- Apply a filter on the RSID Root column on the value noted in the document of interest.\n\nAll responsive documents with that same RSID Root are derived from the same source document.",
}
tip_numDocumentsEachRsidRoot = {
    "Title": "Get a total number of documents for each RSID Root value",
    "Text": "If you’d like to see how many documents share the same RSID Root value, the easiest way to accomplish this is with a pivot table.\n\n1.	Navigate to the RSID worksheet\n2.	Click in the table\n3.	On the ribbon cable, click on Insert, Pivot Table, make sure you check 'Add this data to the Data Model'\n4.	Add 'RSID Root' to Rows\n5.	Add 'File Name' to Values.\n6.	Click on 'Count of File Name' in Values and choose Value Field Settings\n7.	Summarize value field by 'Distinct Count'.\n	If you don’t see this option, it’s because you forgot to check 'Add this data to the Data Model' in step 3.\n	Delete the newly created pivot worksheet and restart.\n8.	Click in the pivot table in the worksheet, and then click on PivotTable Analyze in the ribbon\n9.	Click on 'Options' to the right of the ribbon, just under the pivot table name\n10.	Click on the 'Totals and Filters' tab.\n11.	Uncheck 'Show grand totals for rows' and 'Show grand totals for columns' under the Grand Totals section.\n12.	Click OK\n13.	Navigate to cell C3 (to the right of the column title 'Distinct Count of Count in document.xml').\n14.	Click on Data in the ribbon cable.\n15.	Click on the Filter icon in the ribbon cable (looks like a funnel in the 'Sort & Filter section of the ribbon cable).\n	This will add a filter option for the column 'Distinct Count of File Name'.\n16.	You can now filter on the column 'Distinct Count of File Name'.\n	If you uncheck count of 1, you’ll see a list of RSID Root values that have more than one File Name with that same RSID Root.\n	You can sort on this column if you wish as well to identify those with the largest count if that’s what you want to see.\n17.	You can double click on the count to open a new worksheet with a list of all documents with that RSID Root value.\n	The new worksheet will contain all RSID Type values. You can do additional filtering here if you wish.\n18.	If you want to keep this newly created worksheet created by the pivot table, right-click on the worksheet name and give it a meaningful name.",
}
tip_docsCreatedBySameWindowsUser = {
    "Title": "Identify docs likely created by the same Windows user",
    "Text": "A new blank document is typically created using the template normal.dotm.\nThe template may have one or more rsidR values in it that will be inherited by any documents created from this template.\nThat/those rsidR value(s) will have a 0 count in the new document, as no editing will be associated to that revision session.\nKnowing this, you can do the following to identify documents likely created by the same user (but with different RSID Root values, regardless of what author is displayed.\n\n1.	Navigate to the RSID worksheet\n2.	Click in the table\n3.	On the ribbon cable, click on Insert, Pivot Table, make sure you check 'Add this data to the Data Model'\n4.	Add 'RSID Type' to Filters (drag the field name to Filters)\n5.	Add Count in document.xml to Filters (drag the field name to Filters)\n6.	Click on RSID Type filter in cell A1 and filter on type 'rsidR'\n7.	Click on 'Count in document.xml' in cell A2 and filter on count of 0\n8.	Add 'RSID Value' to Rows\n9.	Add 'RSID Root' to Values\n10.	Click on 'Count of RSID Root' in Values and choose Value Field Settings\n11.	Summarize value field by 'Distinct Count'. If you don’t see this option, it’s because you forgot to check 'Add this data to the Data Model' in step 3.\n	Delete the newly created pivot worksheet and restart.\n12.	Click in the pivot table in the worksheet, and then click on PivotTable Analyze in the ribbon\n13.	Click on 'Options' to the right of the ribbon, just under the pivot table name\n14.	Click on the 'Totals and Filters' tab.\n15.	Uncheck 'Show grand totals for rows' and 'Show grand totals for columns' under the Grand Totals section.\n16.	Click OK\n17.	Navigate to cell C4 (should be the cell immediately to the right of the column title 'Distinct Count of RSID Root').\n18.	Click on Data in the ribbon cable.\n19.	Click on the Filter icon in the ribbon cable (looks like a funnel in the 'Sort & Filter section of the ribbon cable).\n	This will add a filter option for the column 'Distinct Count of RSID Root'.\n20.	Click on the pull down for the column heading 'Distinct Count of RSID Root' in the pivot table and uncheck the count of 1.\n	Those with a count of 1 means that the rsidR value is only in one unique RSID Root value.\n	We want to see where the rsidR with a 0 count is present in documents with different RSID Root values.\n21.	If you don’t have any results, that means none of the documents with different RSID Root values share any rsidR values with a 0 count.\n22.	If you do have results, you can double click on the number in the column 'Distinct Count of RSID Root'.\n	This will create a new worksheet that contains all the documents with that rsidR value with a 0 count.\n	This will also include documents with the same RSID Root value.\n	You can sort this new worksheet by the RSID Root column and scroll through to see the documents with different RSID Root values that\n	share the same rsidR value with a 0 count.\n23.	Although this isn’t an absolute, it’s very likely that all these documents were created by the same Windows user account,\n	as the rsidR value is a random 32-bit value.\n	The likelihood of a collision (two different documents randomly generating the same rsidR value) is very low.\n24.	If you want to keep this newly created worksheet created by the pivot table, right-click on the worksheet name and give it a meaningful name.",
}
tip_scriptOverview = {
    "Title": "Overview",
    "Text": """Purpose: Conduct a forensic analysis of one or more Microsoft Word docx/dotx/dotm files.\n
Input: You can select one or more MS Word files within a folder or alternatively select a root folder and the script will recursively add all MS Word files it finds from that point in the hierarchy.\n
Output: The results will be saved to a Microsoft Excel file. You will be prompted to provide a file name of the Excel file and where you want to save it. The Excel file will have four or more worksheets depending on the processing option you select.\n
The script will also output a log file in the same folder as the Excel file and will bear the following naming convention: DOCx_Parser_Log_YYYYMMDD_HHMMSS.log.\n\n""",
}
tip_excelWorksheets = {
    "Title": "Worksheets",
    "Text": """Doc_Summary: This worksheet will have one row for each file processed. It will contain a summary of the artifacts relating to the documents (e.g., MD5 hash, number of rsidR, RSID Root, number of paragraph tags (w:p), run tags (w:r), text tags (w:t).\n
Metadata: This worksheet will have one row for each file processed. It will contain metadata such as the author of the document, the date created, who last modified it, the last modified date, revision count, editing time, etc. It’s important to note that there have been instances where the metadata relating to the number of pages/lines/characters have been inaccurate. This is not a flaw in the script. Rather, it was found that the metadata within the document was wrong. To correct this, the document had to be opened and resaved. But in doing so, you are changing the last time it was modified, and by whom.\n
Comments: This worksheet will have zero or more rows for each file. If there are any comments in the document, each comment will occupy one row. Any reply to a comment will be in its own row. It will contain the comment ID number, the timestamp of the comment, the author, the author’s initials, and the comment itself.\n
RSIDs: This worksheet will have multiple rows for each file. Each row will be a unique RSID Type and value, as well as how many times that RSID appears in the document. The rsidR value denotes Revision Save Identifier. Each time there is a save action, a new rsidR value is generated and any text from that session will have that rsidR value attached to it. This allows you to identify what text was typed within a given editing session (a given rsidR value).\n
Large documents can result in hundreds of rows, as they will contain many different RSID values. Excel limits the number of rows in a spreadsheet to just over 1 million. The script will break up the RSIDs worksheet into multiple worksheets if necessary, with 1 million rows in each. Each RSIDs worksheet will include a number (1, 2, 3, etc.) in the worksheet name.\n
Archive Files: This worksheet will have multiple rows for each file. Microsoft Word docx files are compound files. In fact, they are nothing more than a ZIP compressed file with multiple files within it. This worksheet will extract the name of each file within the compound file and include its name, the modified time of the file within the compound file (which in most cases should be “nil”), the uncompressed size of the file, and various ZIP file attributes for that specific file within the compound file.\n
Excel Tips: This worksheet will contain analysis tips.\n\n""",
}
tip_processingOptions = {
    "Title": "Processing Options",
    "Text": """Triage: Triage mode will produce the Doc_Summary, Metadata, Comments, and Excel Tips worksheets only. If you are examining 10K, 20K or more MS Word documents collected as part of your investigation, you are going to want to start with triage mode. This will run faster, as there is less parsing. It does not produce the RSIDs or Archive Files worksheets, which can account for a lot of data.
Conduct your initial review using this triage mode and identify documents that you want to reprocess with the full parsing option.\n
Full: The Full parsing option will produce all of the worksheets covered earlier. If processing a large number of files, it can result in a large Excel document. In a test case with 17,500 files, it produced 25 worksheets of RSID values, and an Excel document that was ½ Gig in size. For this reason, it is recommended that you start with triage and only use the Full parsing on select files identified as a result of the triage exercise.\n
Hash Files: If you select this option, the script will hash each file it processes, as well as hash each file within the DOCx compound file (found in the worksheet “Archive Files”).  You may want to use this option to capture the MD5 hash of each file to attest to the integrity of the file later on, as well as to use to identify duplicate files.\n\n""",
}
tip_guiWorkFlow = {
    "Title": "GUI Workflow",
    "Text": """When you launch the application in GUI mode, you’ll need to select your parsing option (Triage or Full), and if you wish, check off the option to hash the files.\n
You will need to select the Excel file where you wish to save the processing results, as well as select either a list of files within a single folder, or select a folder that you wish to process recursively.
The Processing Status window will identify how many files were passed to the script for parsing, the number of files that produced a processing error, and the # of files remaining to be processed. Within this window you will see output from the script as it’s processing the files.\n
Stop: If you click on the stop button, it will stop processing. The Excel file will be written up to the last file to be processed. The log file will also be written.\n
Reset: If you want to run the script again, you can click on the Reset button and select a new output file and new files to process.\n
Open Log File: Opens the log file.\n
Open Excel File: Opens the Excel file.\n
Open Output Path: Open the output path folder.""",
}
